{"version":3,"file":null,"sources":["../src/BEMQuery.js","../src/factory.js"],"sourcesContent":["'use strict';\n\nfunction checkConverter( converter ) {\n\treturn typeof converter === 'object' && typeof converter.convert === 'function';\n}\n\nfunction checkSelectorEngine( selectorEngine ) {\n\treturn typeof selectorEngine === 'object' && typeof selectorEngine.find === 'function';\n}\n\nfunction determineContext( context ) {\n\tif ( context instanceof BEMQuery ) { // eslint-disable-line no-use-before-define\n\t\tcontext = context.elements[ 0 ];\n\t}\n\n\tif ( !( context instanceof HTMLElement ) && context !== document ) {\n\t\tcontext = document;\n\t}\n\n\treturn context;\n}\n\nfunction fetchElements( query, context, converter, selectorEngine ) {\n\tif ( !query ) {\n\t\tthrow new TypeError( 'Selector must be set.' );\n\t}\n\n\tif ( typeof query === 'string' ) {\n\t\tquery = converter.convert( query ).CSS;\n\t\treturn selectorEngine.find( query, context );\n\t} else if ( query instanceof HTMLElement ) {\n\t\treturn [\n\t\t\tquery\n\t\t];\n\t} else if ( query instanceof BEMQuery ) { // eslint-disable-line no-use-before-define\n\t\treturn query.elements;\n\t} else if ( typeof query === 'object' ) {\n\t\treturn Array.from( query );\n\t} else {\n\t\tthrow new TypeError( 'Selector must be a string, object, array or DOM element.' );\n\t}\n}\n\nfunction defineProperties( obj, elements ) {\n\tObject.defineProperty( obj, 'elements', {\n\t\tvalue: elements\n\t} );\n\n\tobj.elements.forEach( ( element, index ) => {\n\t\tObject.defineProperty( obj, index, {\n\t\t\tenumerable: true,\n\t\t\tget() {\n\t\t\t\treturn new BEMQuery( this.elements[ index ], document, this.converter, this.selectorEngine ); // eslint-disable-line no-use-before-define\n\t\t\t}\n\t\t} );\n\t}, obj );\n\n\tObject.defineProperty( obj, 'length', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this.elements.length;\n\t\t}\n\t} );\n}\n\n/** Class representing elements collection. */\nclass BEMQuery {\n\t/**\n\t * Creates elements collection.\n\t *\n\t * @param {String|Iterable|HTMLElement} query Selector or\n\t * existing elements collection upon which the new elements collection\n\t * should be created.\n\t * @param {Document|HTMLElement|BEMQuery} context Context from which\n\t * elements should be fetched.\n\t * @param {Converter} converter BEM selector converter to be used.\n\t * @param {SelectorEngine} selectorEngine CSS selector engine to be used\n\t * by the current and descendant `BEMQuery` instances.\n\t * @class\n\t */\n\tconstructor( query, context, converter, selectorEngine ) {\n\t\tif ( !checkConverter( converter ) ) {\n\t\t\tthrow new TypeError( 'Converter must be an object with convert method defined.' );\n\t\t}\n\n\t\tif ( !checkSelectorEngine( selectorEngine ) ) {\n\t\t\tthrow new TypeError( 'SelectorEngine must be an object with find method defined.' );\n\t\t}\n\n\t\tthis.converter = converter;\n\t\tthis.selectorEngine = selectorEngine;\n\n\t\tcontext = determineContext( context );\n\n\t\tdefineProperties( this, fetchElements( query, context, converter, selectorEngine ) );\n\t}\n\n\t/**\n\t * Gets element with given index.\n\t *\n\t * @param {Number} index Element's index.\n\t * @return {BEMQuery} New BEMQuery instance with fetched element\n\t * as an only element in the collection.\n\t */\n\tget( index ) {\n\t\tindex = Number( index );\n\n\t\tif ( Number.isNaN( index ) ) {\n\t\t\tthrow new TypeError( 'Index must be a correct Number.' );\n\t\t} else if ( index < 0 ) {\n\t\t\tthrow new RangeError( 'Index must be greater or equal to 0.' );\n\t\t} else if ( index > ( this.elements.length - 1 ) ) {\n\t\t\tthrow new RangeError( 'Index cannot be greater than collection\\'s length.' );\n\t\t}\n\n\t\treturn new BEMQuery( this.elements[ index ], document, this.converter, this.selectorEngine );\n\t}\n\n\t/**\n\t * Executes callback on every element in the collection.\n\t *\n\t * @param {Function} callback Callback to be executed.\n\t * @return {BEMQuery} Current `BEMQuery` instance.\n\t */\n\teach( callback ) {\n\t\tif ( typeof callback !== 'function' ) {\n\t\t\tthrow new TypeError( 'Callback must be a function.' );\n\t\t}\n\n\t\tconst converter = this.converter;\n\t\tconst selectorEngine = this.selectorEngine;\n\n\t\tthis.elements.forEach( ( element ) => {\n\t\t\tcallback( new BEMQuery( element, document, converter, selectorEngine ) );\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns iterator for contained elements.\n\t *\n\t * @return {Iterator} Returned iterator.\n\t */\n\t[ Symbol.iterator ]() {\n\t\tlet i = 0;\n\t\tconst elements = this.elements;\n\t\tconst converter = this.converter;\n\t\tconst selectorEngine = this.selectorEngine;\n\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tif ( i < elements.length ) {\n\t\t\t\t\tconst element = elements[ i++ ];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: new BEMQuery( [ element ], document, converter, selectorEngine ),\n\t\t\t\t\t\tdone: false\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tdone: true\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default BEMQuery;\n","'use strict';\n\nimport bsc from 'bemquery-selector-converter';\nimport SelectorEngine from 'bemquery-selector-engine';\nimport BEMQuery from './BEMQuery';\n\n/**\n * BEMQuery instance factory.\n *\n * @param {String|Iterable|HTMLElement} query Selector or\n * existing elements collection upon which the new elements collection\n * should be created.\n * @param {Document|HTMLElement|BEMQuery} context Context from which\n * elements should be fetched.\n * @return {BEMQuery} New BEMQuery instance.\n */\nfunction factory( query, context = document ) {\n\tconst converter = bsc();\n\tconst selectorEngine = new SelectorEngine();\n\tconst bemQuery = new BEMQuery( query, context, converter, selectorEngine );\n\n\treturn bemQuery;\n}\n\nexport default factory;\n"],"names":[],"mappings":"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"}