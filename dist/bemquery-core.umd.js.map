{"version":3,"file":"bemquery-core.umd.js","sources":["../src/BEMQuery.js","../src/factory.js"],"sourcesContent":["'use strict';\n\nfunction checkConverter( converter ) {\n\treturn typeof converter === 'object' && typeof converter.convert === 'function';\n}\n\nfunction checkSelectorEngine( selectorEngine ) {\n\treturn typeof selectorEngine === 'object' && typeof selectorEngine.find === 'function';\n}\n\nfunction determineContext( context ) {\n\tif ( context instanceof BEMQuery ) { // eslint-disable-line no-use-before-define\n\t\tcontext = context.elements[ 0 ];\n\t}\n\n\tif ( !( context instanceof HTMLElement ) && context !== document ) {\n\t\tcontext = document;\n\t}\n\n\treturn context;\n}\n\nfunction fetchElements( query, context, converter, selectorEngine ) {\n\tif ( !query ) {\n\t\tthrow new TypeError( 'Selector must be set.' );\n\t}\n\n\tif ( typeof query === 'string' ) {\n\t\tquery = converter.convert( query ).CSS;\n\t\treturn selectorEngine.find( query, context );\n\t} else if ( query instanceof HTMLElement ) {\n\t\treturn [\n\t\t\tquery\n\t\t];\n\t} else if ( query instanceof BEMQuery ) { // eslint-disable-line no-use-before-define\n\t\treturn query.elements;\n\t} else if ( typeof query === 'object' ) {\n\t\treturn Array.from( query );\n\t} else {\n\t\tthrow new TypeError( 'Selector must be a string, object, array or DOM element.' );\n\t}\n}\n\nfunction defineProperties( obj, elements ) {\n\tObject.defineProperty( obj, 'elements', {\n\t\tvalue: elements\n\t} );\n\n\tobj.elements.forEach( ( element, index ) => {\n\t\tObject.defineProperty( obj, index, {\n\t\t\tenumerable: true,\n\t\t\tget() {\n\t\t\t\treturn new BEMQuery( this.elements[ index ], document, this.converter, this.selectorEngine ); // eslint-disable-line no-use-before-define\n\t\t\t}\n\t\t} );\n\t}, obj );\n\n\tObject.defineProperty( obj, 'length', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this.elements.length;\n\t\t}\n\t} );\n}\n\n/** Class representing elements collection. */\nclass BEMQuery {\n\t/**\n\t * Creates elements collection.\n\t *\n\t * @param {String|Iterable|HTMLElement} query Selector or\n\t * existing elements collection upon which the new elements collection\n\t * should be created.\n\t * @param {Document|HTMLElement|BEMQuery} context Context from which\n\t * elements should be fetched.\n\t * @param {Converter} converter BEM selector converter to be used.\n\t * @param {SelectorEngine} selectorEngine CSS selector engine to be used\n\t * by the current and descendant `BEMQuery` instances.\n\t * @class\n\t */\n\tconstructor( query, context, converter, selectorEngine ) {\n\t\tif ( !checkConverter( converter ) ) {\n\t\t\tthrow new TypeError( 'Converter must be an object with convert method defined.' );\n\t\t}\n\n\t\tif ( !checkSelectorEngine( selectorEngine ) ) {\n\t\t\tthrow new TypeError( 'SelectorEngine must be an object with find method defined.' );\n\t\t}\n\n\t\tthis.converter = converter;\n\t\tthis.selectorEngine = selectorEngine;\n\n\t\tcontext = determineContext( context );\n\n\t\tdefineProperties( this, fetchElements( query, context, converter, selectorEngine ) );\n\t}\n\n\t/**\n\t * Gets element with given index.\n\t *\n\t * @param {Number} index Element's index.\n\t * @return {BEMQuery} New BEMQuery instance with fetched element\n\t * as an only element in the collection.\n\t */\n\tget( index ) {\n\t\tindex = Number( index );\n\n\t\tif ( Number.isNaN( index ) ) {\n\t\t\tthrow new TypeError( 'Index must be a correct Number.' );\n\t\t} else if ( index < 0 ) {\n\t\t\tthrow new RangeError( 'Index must be greater or equal to 0.' );\n\t\t} else if ( index > ( this.elements.length - 1 ) ) {\n\t\t\tthrow new RangeError( 'Index cannot be greater than collection\\'s length.' );\n\t\t}\n\n\t\treturn new BEMQuery( this.elements[ index ], document, this.converter, this.selectorEngine );\n\t}\n\n\t/**\n\t * Executes callback on every element in the collection.\n\t *\n\t * @param {Function} callback Callback to be executed.\n\t * @return {BEMQuery} Current `BEMQuery` instance.\n\t */\n\teach( callback ) {\n\t\tif ( typeof callback !== 'function' ) {\n\t\t\tthrow new TypeError( 'Callback must be a function.' );\n\t\t}\n\n\t\tconst converter = this.converter;\n\t\tconst selectorEngine = this.selectorEngine;\n\n\t\tthis.elements.forEach( ( element ) => {\n\t\t\tcallback( new BEMQuery( element, document, converter, selectorEngine ) );\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns iterator for contained elements.\n\t *\n\t * @return {Iterator} Returned iterator.\n\t */\n\t[ Symbol.iterator ]() {\n\t\tlet i = 0;\n\t\tconst elements = this.elements;\n\t\tconst converter = this.converter;\n\t\tconst selectorEngine = this.selectorEngine;\n\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tif ( i < elements.length ) {\n\t\t\t\t\tconst element = elements[ i++ ];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: new BEMQuery( [ element ], document, converter, selectorEngine ),\n\t\t\t\t\t\tdone: false\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tdone: true\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default BEMQuery;\n","'use strict';\n\nimport bsc from 'bemquery-selector-converter';\nimport SelectorEngine from 'bemquery-selector-engine';\nimport BEMQuery from './BEMQuery';\n\n/**\n * BEMQuery instance factory.\n *\n * @param {String|Iterable|HTMLElement} query Selector or\n * existing elements collection upon which the new elements collection\n * should be created.\n * @param {Document|HTMLElement|BEMQuery} context Context from which\n * elements should be fetched.\n * @return {BEMQuery} New BEMQuery instance.\n */\nfunction factory( query, context = document ) {\n\tconst converter = bsc();\n\tconst selectorEngine = new SelectorEngine();\n\tconst bemQuery = new BEMQuery( query, context, converter, selectorEngine );\n\n\treturn bemQuery;\n}\n\nexport default factory;\n"],"names":["checkConverter","converter","convert","checkSelectorEngine","selectorEngine","find","determineContext","context","BEMQuery","elements","HTMLElement","document","fetchElements","query","TypeError","CSS","Array","from","defineProperties","obj","Object","defineProperty","value","forEach","element","index","enumerable","get","length","constructor","Number","isNaN","RangeError","each","callback","Symbol","iterator","i","next","done","bsc","SelectorEngine","bemQuery"],"mappings":"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"}